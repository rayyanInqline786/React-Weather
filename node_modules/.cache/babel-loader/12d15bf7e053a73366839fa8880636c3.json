{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TEXON WARE\\\\Documents\\\\GitHub\\\\React-Weather\\\\src\\\\App.js\";\nimport './App.css';\nimport React, { Component, useEffect, useState } from 'react';\nimport UserInput from './Component/UserInput';\nimport WeatherCard from './Component/WeatherCard';\nimport axios from 'axios';\nimport './Component/Style/style.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temp: '-',\n      humidity: '-',\n      feelsLike: '-',\n      main: \"-\",\n      description: \"-\",\n      city: \"-\",\n      country: \"-\",\n      photo: \"https://images.unsplash.com/photo-1543226862-39202f29696f?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTV8fHdlYXRoZXJ8ZW58MHwwfDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=400&q=60\"\n    };\n  }\n\n  render() {\n    const apiCall = cityName => {\n      axios('http://api.openweathermap.org/data/2.5/weather?q=' + cityName + '&appid=94ab2eed0b08a6d02d4f181f574c3dcd').then(response => {\n        this.setState({\n          temp: response.data['main']['temp'],\n          humidity: response.data['main']['humidity'],\n          feelsLike: response.data['main']['feels_like'],\n          main: response.data['weather'][0]['main'],\n          description: response.data['weather'][0]['description'],\n          city: response.data['name'],\n          country: response.data['sys']['country']\n        }); // console.log(this.state)\n      }).catch(err => console.log(err));\n    };\n\n    const apiPicCall = cityName => {\n      axios(`https://api.unsplash.com/search/photos?query=${cityName}&orientation=landscape&client_id=GpApbLXJfy_7CKbOU1QJUiVLCM-Zi61puFA5mT3I6-g`).then(response => {\n        console.log(response.data['results'][0]['urls']['raw']);\n        this.setState(current => ({ ...current,\n          photo: response.data['results'][0]['urls']['raw']\n        }));\n      }).catch(err => console.log(err));\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row main-cont\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(UserInput, {\n      apiCall: apiCall,\n      apiPicCall: apiPicCall,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(WeatherCard, {\n      temp: this.state.temp,\n      city: this.state.city,\n      country: this.state.country,\n      main: this.state.main,\n      description: this.state.description,\n      feelsLike: this.state.feelsLike,\n      humidity: this.state.humidity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.photo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/TEXON WARE/Documents/GitHub/React-Weather/src/App.js"],"names":["React","Component","useEffect","useState","UserInput","WeatherCard","axios","App","state","temp","humidity","feelsLike","main","description","city","country","photo","render","apiCall","cityName","then","response","setState","data","catch","err","console","log","apiPicCall","current"],"mappings":"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","sourcesContent":["import './App.css';\r\nimport React,{Component, useEffect, useState} from 'react';\r\nimport UserInput from './Component/UserInput';\r\nimport WeatherCard from './Component/WeatherCard';\r\nimport axios from 'axios';\r\nimport './Component/Style/style.css';\r\n\r\n\r\nclass App extends Component{\r\n  state={\r\n    temp:'-',\r\n    humidity:'-',\r\n    feelsLike:'-',\r\n    main:\"-\",\r\n    description:\"-\",\r\n    city:\"-\",\r\n    country:\"-\",\r\n    photo:\"https://images.unsplash.com/photo-1543226862-39202f29696f?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTV8fHdlYXRoZXJ8ZW58MHwwfDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=400&q=60\"\r\n  }\r\n\r\n  render(){\r\n    const apiCall = (cityName)=>{\r\n    axios('http://api.openweathermap.org/data/2.5/weather?q='+cityName+'&appid=94ab2eed0b08a6d02d4f181f574c3dcd')\r\n    .then((response)=>{\r\n      this.setState({\r\n        temp:response.data['main']['temp'],\r\n        humidity:response.data['main']['humidity'],\r\n        feelsLike:response.data['main']['feels_like'],\r\n        main:response.data['weather'][0]['main'],\r\n        description:response.data['weather'][0]['description'],\r\n        city:response.data['name'],\r\n        country:response.data['sys']['country']\r\n      })\r\n      // console.log(this.state)\r\n    })\r\n    .catch(err=>console.log(err))\r\n  }\r\n\r\n  const apiPicCall = (cityName) =>{\r\n    axios(`https://api.unsplash.com/search/photos?query=${cityName}&orientation=landscape&client_id=GpApbLXJfy_7CKbOU1QJUiVLCM-Zi61puFA5mT3I6-g`)\r\n    .then((response)=>{\r\n      console.log(response.data['results'][0]['urls']['raw'])\r\n      this.setState((current)=>({\r\n        ...current,\r\n        photo:response.data['results'][0]['urls']['raw']\r\n      }))  \r\n    })\r\n    .catch(err=>console.log(err))\r\n\r\n  }\r\n\r\n\r\n    return(\r\n      <div>\r\n        {/* <img src='https://images.unsplash.com/photo-1569212080670-49fab13e148d?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MjB8fHdlYXRoZXJ8ZW58MHwwfDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=400&q=60' /> */}\r\n      <div className=\"container mt-5\">\r\n        <div className=\"row main-cont\">\r\n          <div className=\"col-lg-6\">\r\n      <UserInput apiCall={apiCall} apiPicCall={apiPicCall}/>\r\n      <WeatherCard temp={this.state.temp} city={this.state.city} country={this.state.country} main={this.state.main} description={this.state.description} feelsLike={this.state.feelsLike} humidity={this.state.humidity}/>\r\n    </div>\r\n    <div className=\"col-lg-6\">\r\n      <img src={this.state.photo} />\r\n    </div>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}